{
	"base": [
	  {
		"id": 1,
		"r1": "public static void main(String[] args) {",
		"r2": "if(5<2)\nSystem.out.println('è maggiore');",
		"r3": "else",
		"r4": "System.out.println('è minore');}",
		"sol": "public static void main(String[] args) { if(5<2)\nSystem.out.println('è maggiore'); else System.out.println('è minore');}"
	  },
	  {
		"id": 2,
		"r1": "for(int j=0;",
		"r2": "j<'Hello'.length();",
		"r3": "j++)",
		"r4": "{}",
		"sol": "for(int j=0; j<'Hello'.length(); j++) {}"
	  },
	  {
		"id": 3,
		"r1": "public class Main {",
		"r2": "public static void main(String[] args) {",
		"r3": "System.out.println('Hello world!');",
		"r4": "}}",
		"sol": "public class Main { public static void main(String[] args) { System.out.println('Hello world!'); }}"
	  },
	  {
		"id": 4,
		"r1": "Scanner scanner=",
		"r2": "new Scanner(System.in);",
		"r3": "String parola =",
		"r4": "scanner.next();",
		"sol": "Scanner scanner= new Scanner(System.in); String parola = scanner.next();"
	  },
	  {
		"id": 5,
		"r1": "public class Main {",
		"r2": "public static void main(String[] args) {",
		"r3": "String parola = 'Hello';",
		"r4": "System.out.println(parola);}}",
		"sol": "public class Main { public static void main(String[] args) { String parola = 'Hello'; System.out.println(parola);}}"
	  }
	],
	"intermedio": [
	  {
		"id": 1,
		"r1": "do {",
		"r2": "System.out.println('Dimmi un numero: ');",
		"r3": "} while (",
		"r4": "new Scanner(System.in).nextInt()",
		"r5": "< 0);",
		"sol": "do { System.out.println('Dimmi un numero: '); } while ( new Scanner(System.in).nextInt() < 0);"
	  },
	  {
		"id": 2,
		"r1": "import java.util.*;\npublic class Main {\npublic static void main(String[] args) {\nScanner scan = new Scanner(System.in);",
		"r2": "System.out.println('Dimmi un primo numero x: ');\n int x = scan.nextInt();",
		"r3": "System.out.println('Dimmi un secondo numero y: ');\nint y = scan.nextInt();",
		"r4": "System.out.println(doppio(x));}",
		"r5": "public static int doppio(int n){\n n=n*2;\n return n;}}",
		"sol": "import java.util.*;\npublic class Main {\npublic static void main(String[] args) {\nScanner scan = new Scanner(System.in); System.out.println('Dimmi un primo numero x: ');\n int x = scan.nextInt(); System.out.println('Dimmi un secondo numero y: ');\nint y = scan.nextInt(); System.out.println(doppio(x));} public static int doppio(int n){\n n=n*2;\n return n;}}"
	  },
	  {
		"id": 3,
		"r1": "public static void main(String[]args){\nScanner scanner = new Scanner(System.in); \n String n1 = scanner.next().trim();",
		"r2": "if(n1.length()%2==0) {",
		"r3": "switch (n1.length()) {",
		"r4": "case 1:\nSystem.out.println('Hello Mars');\nbreak;",
		"r5": "default:\nSystem.out.println('Codelympics');}}}",
		"sol":"public static void main(String[]args){\nScanner scanner = new Scanner(System.in); \n String n1 = scanner.next().trim(); if(n1.length()%2==0) { switch (n1.length()) { case 1:\nSystem.out.println('Hello Mars');\nbreak; default:\nSystem.out.println('Codelympics');}}}"
	 }, {
		"id": 4,
		"r1": "public int Exemple(String file){\nint Eta = 0;",
		"r2": "try {\nString TestoLetto = new Scanner(file).next();",
		"r3": "Eta = Integer.valueOf(TestoLetto).intValue();}",
		"r4": "catch (Exception e) {\nSystem.out.println(e.getMessage());}",
		"r5": "return Eta;}",
		"sol": "public int Exemple(String file){\nint Eta = 0; try {\nString TestoLetto = new Scanner(file).next(); Eta = Integer.valueOf(TestoLetto).intValue();} catch (Exception e) {\nSystem.out.println(e.getMessage());} return Eta;}"
	  },
	  {
		"id": 5,
		"r1": "class Solution {\npublic boolean Value(int[] nums) {",
		"r2": "boolean temp =nums[0]",
		"r3": "<=nums[nums.length-1];",
		"r4": "for(int j=0;j<nums.length-1;j++){ if(nums[j]>nums[j+1]&&temp) \nreturn false;",
		"r5": "if(nums[j]<nums[j+1]&&!temp) return false;}\nreturn true;}}",
		"sol": "class Solution {\npublic boolean Value(int[] nums) { boolean temp =nums[0] <=nums[nums.length-1]; for(int j=0;j<nums.length-1;j++){ if(nums[j]>nums[j+1]&&temp) return false; if(nums[j]<nums[j+1]&&!temp) \nreturn false;}\nreturn true;}}"}
	],
	"difficile": [
	  {
		"id": 1,
		"r1": "public void Exemple(){Random random = new Random();",
		"r2": "Map<Integer,String> map = new TreeMap<>();",
		"r3": "for(int i=0;i<10;i++){",
		"r4": "map.put(i,'Hello '+random.nextInt(10));}",
		"r5": "for(Map.Entry<Integer,String> entry : map.entrySet()",
		"r6": ")System.out.println(entry.getKey()+':'+entry.getValue());}",
		"sol": "public void Exemple(){Random random = new Random(); Map<Integer,String> map = new TreeMap<>(); for(int i=0;i<10;i++){ map.put(i,'Hello '+random.nextInt(10));} for(Map.Entry<Integer,String> entry : map.entrySet() )System.out.println(entry.getKey()+':'+entry.getValue());}"	  },
	  {
		"id": 2,
		"r1": "public static boolean hasDuplicate(int[] nums) {",
		"r2": "Set<Integer> uniques = new HashSet<>();",
		"r3": "for (int i = 0; i < nums.length; i++) {",
		"r4": "if (uniques.contains(nums[i])) {return true;}",
		"r5": "uniques.add(nums[i]);",
		"r6": "}return false;}",
		"sol": "public static boolean hasDuplicate(int[] nums) { Set<Integer> uniques = new HashSet<>(); for (int i = 0; i < nums.length; i++) { if (uniques.contains(nums[i])) {return true;} uniques.add(nums[i]); }return false;}"
		},
	  {
		"id": 3,
		"r1": "public class Main { \npublic static void main(String[] args) { \nString x = 'abcdef'; \ntry { \nverifyOrder(x);System.out.println('Stringa in ordine corretto.');}",
		"r2": "catch (Exception e) {\nSystem.err.println(e.getMessage());\n}}",
		"r3": "public static void verifyOrder(String s) throws Exception {\nif (s == null || s.length() < 2) {return;}",
		"r4": "for (int i = 1; i < s.length(); i++) {",
		"r5": "if (s.charAt(i) < s.charAt(i - 1)",
		"r6": ") {throw new Exception('Errore: La stringa non è in ordine corretto.');}}}}",
		"sol": "public class Main { \npublic static void main(String[] args) { \nString x = 'abcdef'; \ntry { \nverifyOrder(x);System.out.println('Stringa in ordine corretto.');} catch (Exception e) {\nSystem.err.println(e.getMessage());\n}} public static void verifyOrder(String s) throws Exception {\nif (s == null || s.length() < 2) {return;} for (int i = 1; i < s.length(); i++) { if (s.charAt(i) < s.charAt(i - 1) ) {throw new Exception('Errore: La stringa non è in ordine corretto.');}}}}"	  
	},
	  {
		"id": 4,
		"r1": "import java.util.Scanner;",
		"r2": "public class Main {public static void main(String[] args) {\nScanner sc = new Scanner(System.in);\nString input = sc.nextLine();\nString[] elements = input.split('\\s+);",
		"r3": "String[] sequence = {'first', 'middle', 'last'}",
		"r4": "int pos = 0;for (String el : elements) {",
		"r5": "if (pos < sequence.length && el.equals(sequence[pos])) { pos++;}}",
		"r6": "} else \n{System.out.println('Errore: ordine errato.');}",
		"r7": "sc.close();}}",
		"sol": "import java.util.Scanner; public class Main {public static void main(String[] args) {\nScanner sc = new Scanner(System.in);\nString input = sc.nextLine();\nString[] elements = input.split('\\s+); String[] sequence = {'first', 'middle', 'last'} int pos = 0;for (String el : elements) { if (pos < sequence.length && el.equals(sequence[pos])) { pos++;}} } else \n{System.out.println('Errore: ordine errato.');} sc.close();}}"
	},
	  {
		"id": 5,
		"r1": "import java.util.*;",
		"r2": "public class Main {\npublic static void main(String[]args){\nRandom random = new Random();",
		"r3": "Map<Integer,String> map = new TreeMap<>();\nfor(int i=0;i<10;i++){",
		"r4": "map.put(i,'Hello '+random.nextInt(10));}",
		"r5": "for(Map.Entry<Integer,String> entry : map.entrySet()",
		"r6": "){System.out.println(entry.getKey()+':'+entry.getValue());}}}",
		"sol": "import java.util.*; public class Main {\npublic static void main(String[]args){\nRandom random = new Random(); Map<Integer,String> map = new TreeMap<>();\nfor(int i=0;i<10;i++){ map.put(i,'Hello '+random.nextInt(10));} for(Map.Entry<Integer,String> entry : map.entrySet() ){System.out.println(entry.getKey()+':'+entry.getValue());}}}"
		  }
	]
  }
  